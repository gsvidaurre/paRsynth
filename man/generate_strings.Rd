% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_strings.R
\name{generate_strings}
\alias{generate_strings}
\title{Generate strings with group membership and individual identity information}
\usage{
generate_strings(
  n_groups = 2,
  n_individuals = 5,
  n_calls = 10,
  string_length = 16,
  group_information = 8,
  individual_information = 2,
  random_variation = 2
)
}
\arguments{
\item{n_groups}{Integer. The number of groups.}

\item{n_individuals}{Integer. The number of individuals per group.}

\item{n_calls}{Integer. The number of calls per individual.}

\item{string_length}{Integer. The number of characters in the string that encode individual- and group-level information through frequency modulation patterns. The current minimum is 6 characters and the maximum is 200 characters. The length of the character string can influence visualizations of synthetic vocalizations in ways that depend on the duration of the vocalization (see details below).}

\item{group_information}{Integer. The number of characters that vary in the middle of the string across groups. The default is 8 characters. The user must provide an even value; negative values will result in unexpected behavior.}

\item{individual_information}{Integer. The number of characters that vary in the middle of the string within groups. The default is 2 characters. The user must provide an even value; negative values will result in unexpected behavior.}

\item{random_variation}{Integer. The number of characters that will vary randomly and will be appended after the individual information. The default is 2 characters. The user must provide an even value; negative values will result in unexpected behavior.}
}
\value{
This function returns a data frame containing the call strings and metadata columns that contain unique numeric identifiers for the group, individual, and call for the given individual.
}
\description{
\code{generate_strings()} creates character strings representing vocalizations with varying amounts of group membership and individual identity information. It allows users to specify the length of string components allocated to encoding individual identity (characters emphasizing differentiation among individuals) versus group membership (characters shared among group members but not across groups). Currently, the function generates strings using 3 unique characters: "A", "B", and "C".
}
\details{
The individual-specific and group-specific string components are combined to form the middle of a longer string. The individual-specific component of the string may not be unique to a single individual within a group, as individual distinctiveness  depends on the total number of individuals in the group, the length of the individually-specific string component, and the number of unique characters or symbols available for creating strings (which may vary depending on how users modify the function). For example, if the length of the individual-specific string component is 2 characters long and 3 unique characters are used, there will be 3^2 (or 9) possible unique individual signatures.

The final string is composed of a global head (a short string of characters shared across all individuals), the group membership information, individual identity information, random variation, and a global tail (a short string of characters shared across all individuals). The global heads and tails are used to guide the start and end of frequency modulation patterns created after converting the character strings to Parsons code in later functions. The relative amount of group versus individual information across calls can be controlled by setting the length of \code{group_information} and \code{individual_information}, respectively. For example, when \code{group_information} is longer than \code{individual_information}, there will be more group membership information encoded in strings, and vice versa. The current version of the function does not facilitate varying string length within or across individuals. The random variation added to each string simulates the stochasticity in vocal production to facilitate variation within an individual.

The length of the character string can influence visualizations of the synthetic vocalizations, depending on the duration of the synthetic vocalization (which is set in \code{write_audio()}). Long character strings that are converted to short synthetic vocalizations may have frequency contours that appear thick and blurry in spectrograms. A general rule of thumb to yield clearer frequency contours can be to increase the duration of the synthetic vocalization (although this will increase computational time for large datasets). We have found that vocalizations of 200 ms duration have clearer frequency contours when character string length in \code{generate_strings()} is set to 10 characters or fewer. For strings that are 12 to about 22 characters long, a 400 ms duration vocalization will have clearer contours.
}
\examples{
seed <- 8
set.seed(seed) # For reproducibility
library(tidyverse)
example_calls <- generate_strings(n_groups = 2,
                                   n_individuals = 5,
                                   n_calls = 10,
                                   string_length = 16,
                                   group_information = 8,
                                   individual_information = 2,
                                   random_variation = 2
                                 )
glimpse(example_calls)

}
\author{
Ari Cross, Grace Smith-Vidaurre, Raneem Samman
}
